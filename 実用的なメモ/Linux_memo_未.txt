基本命令
・ｌｓ（list）
列出当前目录下所有文件夹与文件名称
ls 路径
列出路径目录下所有文件夹与文件名称
ls 选项　路径
列出路径目录下所有文件夹与文件名称，并以指定的格式进行显示。
ls -l
表示list，表示以详细列表的形式进行展示。
ls -i
查找文件inode号
ls -a
表示显示所有文件及文件夹包括隐藏文件
ls -lha
表示显示所有文件及文件夹包括隐藏文件，并以可读性较高的格式进行显示

・pwd（print working directory）
打印当前工作目录

・cd
切换到用户家目录
cd 路径
切换到路径
cd ~
切换到用户家目录

・mkdir 路径
创建文件夹
mkdir -p 路径
一次性创建多层不存在目录
mkdir 路径1 路径2 。。。
一次性创建多个目录

・touch 文件名/路径
创建文件

・cp 被复制的文件 复制的位置
复制文件或文件夹到指定位置
cp -r 复制文件夹

・mv 移动前路径 移动后路径
移动文件，路径到指定位置

・rm 删除文件
删除文件不提示
rm -f 文件名 
删除文件夹
rm -r 文件夹

・输出重定向
>覆盖输出
>>追加输出

・cat 文件名
直接打开一个文件
-n 打开文件显示行号
-T 把Tab键用^I显示出来
-E 列出每行结尾的回车符$
-v 列出特殊字符
-A 根目录于-VET列出所有隐藏符号

对文件进行合并
cat 待合并文件1 待合并文件2 。。。 > newfile

进阶命令
・df
查看磁盘空间
df -h 
以可读性较高模式查看磁盘空间

・free
查看内存使用情况
free -m 
以MB单位查看内存使用情况

・head 文件名
查看一个文件的前n行，如果不指定n，默认指定前10行

・tail 文件名
查看一个文件的后n行，如果不指定n，默认指定后10行
tail -f 文件名
查看一个文件的动态变化

・more分屏显示文件
more 文件名
空格键：向下翻页
b：向上翻页
回车键：向下滚动一行
/字符串：搜索指定字符串
q：退出

・less 文件名
以较少的内容进行输出
空格键翻一页，上下键按行，数字键加回车

・wc -lwc 文件名
统计文件内容信息，行数(l)，单词数(w)，字节数(c)

・date
表示操作时间和日期（读取，设置）
date +%F 年月日(date "+%Y-%m-%d")
date "+%F %T"年月日时分秒(date "+%Y-%m-%d %H:%M:%S")
date -d "-20 day" "+%F %T" year month day
20天前的现在时间
date -d "+20 day" "+%F %T"
20天后的现在时间

・cal操作日历
cal -3
输出上一个月，本月，下个月的日历
cal -y 年份
表示输出某一年份的日历

・clear/Ctrl+l清屏

管道（|）
一般用于过滤，特殊，扩展处理
ｌｌ | grep hello

grep 选项 搜索内容 文件名
-i 忽略大小写
-n 显示行号
-v 取反
--color=auto：将找到的关键字加上颜色显示
-w 按单词搜索
-o 打印匹配关键字


cut 选项 文件）
作用：列提取命令
-f 列号：提取第几列（多个列用逗号隔开）
-d 分隔符：按照指定分隔符分割列（默认制表）
-c 字符范围：不依赖分隔符来区分列，而是通过字符范围（行首为0）来进行字段提取，“n-”表示从第n个字符到尾
cut -c 8- 文件名
提取第8个字符之后的所有


zip 选项 压缩包名 源文件或源目录
-r 压缩目录

unzip 选项 压缩包名
-d 指定解压位置

.gz


高级命令
・hostname操作服务器的主机名
hostname -f 

・id用于查看用户的基本信息如用户id，用户组id，附加组id
・whoami 显示当前登录的用户名

・ps查看服务器的进程详细信息
-e 等价于-A 列出全部的进程
-f 显示全部的列
UID         PID   PPID  C STIME TTY          TIME CMD
root          1      0  0 19:33 ?        00:00:02 /sbin/init
root          2      0  0 19:33 ?        00:00:00 [kthreadd]
root          3      2  0 19:33 ?        00:00:00 [migration/0]
root          4      2  0 19:33 ?        00:00:00 [ksoftirqd/0]
UID该进程执行的用户id
PID进程id
PPID该进程的父级进程id，如果父级找不到就是僵尸进程
C cpu的占用率，百分比形式
STIME执行的启动时间
TTY终端设备，发起该进程的设备识别符号，？表达该进程不是由终端发起
TIME进程执行的时间
CMD该进程的名称或者对应的路径

top查看服务器的进程站的资源（动态显示）

du查看目录真实大小
-s 只显示汇总的大小
-h 以可读性较高模式进行显示
du -sh 路径
统计路径目录的大小

find 路径范围 选项 选项的值
用于查看文件
-name 按名字查找
-iname 按名字查找不分大小写
-inum 按文件inode号查找文件
-type 按类型搜(f,d)
-size 按文件大小查找

find / -name test

service用于控制软件服务的启动停止重启
service 服务名 start/stop/restart

杀死进程
kill 进程ID
killall 进程名称

ifconfig操作网卡相关的指令

reboot重启
reboot -w 模拟重启但不重启（只写关机与开机日志信息）
、
shutdown关机
shutdown -h now "关机提示" 马上关机
shutdown -h 15:15 "关机提示" 指定时间关机

uptime
作用:输出计算机的持续在线时间（开机运行在现在）

uname
作用：获取操作系统相关信息
uname -a 
获取全部系统信息  发布时间，开源计划，类型，全部主机名，内核版本

查看网络的连结状态
netstat -tnlp
-t 表示只列出tcp协议的连接
-n 表示将地址从字母组合转化成ip地址，将协议转化成端口号来显示
-l 表示过滤出state（状态）列中值为listenner的连结
-p 进程ID和进程名称

stat 查看文件详细信息
stat 文件名

man
手册
man 命令
man ls
按q退出

如何在命令行中快速删除光标前、后的内容？
前：ctrl+u 后：ctrl+k

————————————————————————————————vim start————————————————————————————————
vim打开方式
vim 文件路径
vim ＋数字 文件路径 作用：打开指定文件，并将光标移动到指定行
vim ＋/关键词 文件路径 作用：打开指定文件并高量显示关键词

上下左右移动光标
方向键
H左，J下，K上，L右

删除单个字母
x
删除多个字母
数字+x

光标移动到行首
^
光标移动到行尾
$
光标移到指定行
：行号

光标移动到首行
gg
光标移动到尾行
GG
向上翻屏
ctrl+b
向下翻屏
ctrl+f

复制光标所在行
复制yy
粘贴按p

以光标所在行为准，向下复制指定的行数
数字yy

可视化复制
ctrl+v

剪切、删除
dd（删除之后下一行上移）
数字dd（包含当前行）
D(删除之后不上移，当前行变为空行)
删除指定范围行
:n1,n2d

撤销
u
恢复
ctrl+r

替换光标所在处的字符
r
从光标处开始替换字符，按ESC结束
R

快速将光标移动到指定行
数字G

以当前光标为准向上，向下移动n行
按键：数字↑、数字↓

以当前光标为准向左，向右移动n行
按键：数字→、数字←

末行模式下快速移动方式，移动到指定行
按：后输入数字按回车键

末行模式保存
：w 保存操作
：w 路径 另存为操作

末行模式退出
：q 退出操作

保存并退出
：wq

强制保存，退出
：q! 强制退出

调用外部命令
：！ls

搜索、查找
:/关键词
搜索中切换搜索结果，下一个n,上一个N
取消高量 ：nohl

替换光标所在行第一处符合条件的内容
：s/搜索关键词/新的内容 

替换光标所在行所有符合条件的内容
：s/搜索关键词/新的内容/g

替换整个文档中每行符合第一个条件的内容
：%s/搜索关键词/新的内容

替换整个文档中符合条件的内容
：%s/搜索关键词/新的内容/g

显示行号
：set nu

不显示行号
：set nonu

设置是否将查找的字符串高度显示。默认是set hlsearch高亮显示
：set hlsearch

当用vim打开多个文件
vim 文件名 文件名 文件名 文件名
:files
  1 %a   "test.java"                    行 1
  2      "task.txt"                     行 0
  3      "while.sh"                     行 0
在%a的位置有2种显示可能 
%a:a=active 表示当前正在打开的文件
#：表示上一个打开的文件
切换文件
：open 文件名
切换上一个文件
：bn
切换下一个文件
：bp

控制着色显示
显示：syntax on
关闭：syntax off

vim的配置
个人配置 ~/.vimrc
全局配置 /etc/vimrc

异常退出
当系统断电或者没有使用：wq保存退出vim时需要删除以*.swp文件

导入其他文件
：r 文件名
————————————————————————————————vim end————————————————————————————————

别名机制
依赖一个别名映射文件.bashrc
想要别名生效必须重新登陆当前用户

退出方式
：x

Linux自有服务
一，运行模式
Linux中存在一个进程init 进程ID是1该进程存在一个配置文件inittab
文件的主要内容
# Default runlevel. The runlevels used are:
#   0 - halt (Do NOT set initdefault to this)
#   1 - Single user mode
#   2 - Multiuser, without NFS (The same as 3, if you do not have networking)
#   3 - Full multiuser mode
#   4 - unused
#   5 - X11
#   6 - reboot (Do NOT set initdefault to this)
centOS中存在7中运行模式
0-表示关机级别（不要设置运行级别为0）
1-单用户模式
2-多用户模式，不带NFS（network file system)
3-多用户模式,完全的多用户模式
4-没有被使用的模式（被保留的模式）
5-完全的图形化界面模式
6-重启级别（默认级别不要设置）
init 0表示关机
init 3表示切换到不带桌面的模式
init 5切换到图形界面
init 6重启电脑
init指示只有超级用户root有权限执行

二，用户与用户组管理
/etc/passwd 储存用户的关键信息（主组信息）
/etc/group 储存用户组关键信息（附加组信息）
/etc/shadow 储存用户的密码信息

添加用户
useradd 选项 用户名
-g	表示指定的用户主组，值可以是用户组的id，也可以是组名
-G	表示指定的用户附加组，值可以是用户组的id，也可以是组名
-u	uid，用户的id（用户的标识符）系统默认从500后按顺序分配，如不想使用可以通过该选项自定义
-c 添加注释
/etc/passwd
hsx124:x:502:502::/home/huang124:/bin/bash
admin:x:503:503::/home/admin:/bin/bash
testuser:x:504:504::/home/testuser:/bin/bash

用户：密码：用户ID：用户组ID：注释：家目录：解释器shell
用户	创建新用户名称，后期登录时需要输入
密码	此密码位置一般情况都是X，表示密码的占位 
用户ID	用户的识别符
用户组ID	该用户所属的主组ID
注释	解释该用户是做什么用的
家目录	用户登录进入系统之后默认的位置
※注意
在不添加选项的时候，执行useradd之后会执行一系列的操作
1，会创建同名的家目录
2，会创建同名的用户组

修改用户
usermod 选项 用户名
-g	表示指定的用户主组，值可以是用户组的id，也可以是组名
-G	表示指定的用户附加组，值可以是用户组的id，也可以是组名
-u	uid，用户的id（用户的标识符）系统默认从500后按顺序分配，如不想使用可以通过该选项自定义
-l 表示修改用户名

设置密码
passwd 用户名

切换用户
su（switch user）用户名（用户不指定则表示切换到root）

删除用户
userdel 选项 用户名
-r 表示删除用户的同时删除其家目录
正在登录中的用户此命令无法删除
解决方法：kill对应用户的全部进程

用户组管理
shuxiong:x:501:
hsx124:x:502:
admin:x:503:
testuser:x:504:
用户组：密码：用户组ID：组内用户
密码：x表示占位符，虽然可以设置密码一般不设
组内用户名：表示附加组是该组的用户名称

用户组添加
groupadd 选项 用户组名
-g：表示选择自己设置一个自定义的用户组ID数字，如果不指定默认从500开始递增

用户组编辑
groupmod 选项 用户组名
-g：表示选择自己设置一个自定义的用户组ID数字
-n：表示设置新的用户组的名称

用户组删除
groupdel 用户组名

网络设置
网上配置文件位置
/etc/sysconfig/network-scripts/ifcfg-eth0
/etc/sysconfig/network-scripts/ifcfg-lo
在目录中网上的配置文件命名格式：ifcfg-网上名称
DEVICE=eth0
HWADDR=00:0C:29:11:6F:10
TYPE=Ethernet
UUID=05822160-4ddf-4862-8333-ebb4e87a5b0d
ONBOOT=yes
NM_CONTROLLED=yes
BOOTPROTO=dhcp

ONBOOT:是否开机启动
BOOTPROTO:ip地址分配方式，DHCP表示动态主机分配协议
HWADDR：硬件地址，MAC
重启网上
以下目录放置许多服务的快捷方式
/etc/init.d
/etc/init.d/network restar
创建文件的快捷方式
ln -s 原路径 目标路径
启动单个网上
停止某个网上
ifdown 网上名
开启某个网上
ifup 网上名

ssh服务
secure shell安全外壳协议
作用：远程接连协议，远程文件传输协议
协议使用端口号：默认是22
/etc/ssh/ssh_config
服务重启及停止
service sshd start/stop/restart
/etc/init.d/sshd start/stop/restart

设置主机名
设置临时主机名
hostname 主机名
设置永久主机名（需要重启）
/etc/sysconfig/network
修改Linux服务器的hosts文件，将修改后的主机名字指向本地（设置FQDN）
hosts文件位置：/etc/hosts

chkconfig --list
作用：提供开机启动项的一个管理服务
其中0-6表示各个启动模式
kdump记录系统崩溃服务

删除服务
chkconfig --del 服务名

添加开机服务启动
chkconfig --add 服务名

设置服务在某个级别下开机启动
chkconfig --level 35 服务名 on/off
chkconfig --level 35 httpd on

ntp服务
作用：用于对计算机的时间同步管理操作
同步服务器时间
1.一次性同步时间
ntpdate 时间服务器的域名或者ip地址
2.设置时间同步服务
service ntpd start / /etc/init.d/ntpd start

防火墙服务
iptables
service iptables start
service iptables status
设置防火墙规则
iptables -A INPUT -p tcp --dport 80 -j ACCEPT #允许访问80端口
iptables:主命令
-A：add，添加规则
INPUT：进站请求(output出站)
-p：protocol，指定协议(icmp/tcp/upd)
--dport：指定端口
-j：指定行为结果，要么允许（accept）要么禁止(reject)
添加完成之后需要保存操作
/etc/init.d/iptables save

rpm管理
作用：对Linux服务器上的软件包进行对应管理（查询，卸载，安装）
查询某个软件的安装情况
rpm -qa | grep 软件名
-q（query） 查询
-a（all） 全部
查询Linux是否安装firefox
结果：
rpm -qa | grep firefox
firefox-45.0.1-1.el6.centos.x86_64

卸载某个软件
rpm -e 软件名
有依赖关系的时候又不想解决依赖关系的时候强制卸载
rpm -e 软件包名 --nodeps

软件的安装
找到安装包
安装包的获得方式
a.官网下载
b.光盘读取
lsblk 查看块状设备的信息
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sr0     11:0    1 1024M  0 rom
sda      8:0    0   20G  0 disk
tqsda1   8:1    0  200M  0 part /boot
tqsda2   8:2    0    2G  0 part [SWAP]
mqsda3   8:3    0 17.8G  0 part /
NAME：名称
SIZE：设备大小
Type：类型
MOUNTPOINT：挂彩点

rpm包在线安装（yum安装）


光盘的挂彩和解挂
解挂当前设备的挂载点命令
umount 路径
mount 设备的原始地址 要挂载的位置（路径）
设备的原始地址：地址统一在dev下，然后根据大小确定具体name值拼凑在一起组成，例/dev/sr0
要挂载的位置:mnt下，也可在mnt下建目录

安装软件命令
rpm -ivh 软件包的完事名称
-i：install
-v：显示进度条
-h：表示以#显示进度条

cron/crontab计划任务
作用：24小时值守
crontab 选项
-l：list 指定用户计划任务列表
-e：edit 编辑指定用户计划任务列表
-u：user 指定用户名，如果不指定则表示当前用户
-r：remove 删除指定用户计划任务列表
crontab -e
编辑计划任务
以行为单位，一行为一个计划
分 时 日 月 周 需要执行的命令（没有指定的用*表示）

取值范围
分：0-59
时：0-23
日：1-31
月：1-12
周：0-6，表示星期一
符号
* 表示取值范围中的每一个数字
- 做区间表达式，要想表示1-7，写成1-7
/ 表示每多少个，如想每10分钟一次，写成*/10
, 表示多个取值，如想在1点2点6点执行，写成1，2，6

权限问题
配置文件位置(禁止)
/etc/cron.deny
配置文件位置(允许)
/etc/cron.allow

Linux权限管理
owner身份 文件所有者（默认文档的创建者）
drwxrwxr-x. 4 hsx124 hsx124    4096 11月  1 21:34 2020 hsx124
-rw-rw-r--. 1 hsx124 hsx124     128 10月  4 22:59 2020 operation.sh
drwxrwxr-x. 2 hsx124 hsx124    4096 11月  3 19:54 2020 sh
-rw-rw-r--. 1 hsx124 hsx124      67 11月  3 21:46 2020 task.txt

drwxrwxr-x
r：read读取 w：write写入 x：execute可执行 -：没有对应权限
d 表示文件类型 d表示文件夹 -表示文件 l表示软连接 s表示套接字
rwx 表示文件所有者权限
rwx 表示文件所属用户组权限
r-x 表示其他人对这个文件的权限

权限设置
chmod 选项 权限模式 文档
-r 递归设置权限（当文档类型为文件夹的时候）
字母形式
u 用户	表示所有者身份（owner）
g 所属群体	表示给所有者同组用户设置（group） 
o 其他人	给其他用户设置权限
a 所有人（全部）		给所有人设置
+ 增加权限
- 减少权限
= 确定权限
r 可读
w 可写
x 可执行
设置权限时不指定给谁设置，默认给所有用户设置
chmod u+rw,g+rw,o+rw 文件名
chmod u=rwx,g=rw,o=rw 文件名
chmod u-x,g-wx,o-x 文件名
数字形式
0 不能读，不能写，不能执行	---
1 不能读，不能写，能执行		--x
2 不能读，能写，不能执行		-w-
3 不能读，能写，能执行		-wx
4 能读，不能写，不能执行		r--
5 能读，不能写，能执行		r-x
6 能读，能写，不能执行		rw-
7 能读，能写，能执行			rwx
读：r		4
写：w		2
执行：x   1
在Linux中删除一个文件不是看一个文件是否有写权限而是看这个文件所属文件夹是否有删除权限

属主与属组设置
属主:所属的用户（文件的主人）
属组：所属的用户组
-rwxr-x-w-. 1 #hsx124 %hsx124       0 10月  4 22:26 2020 world
#所属用户
%用户组
更改文档的所属用户
chown 用户名 文档路径
-R
chown ——R 用户名：组名 文档路径 
chgrp 用户组 文档路径

ACL：用于解决用户对文件身份不足问题
开启ACL
dumpe2fs:查询指定分区详细文件系统信息的命令
-h：仅显示超级块中信息，而不显示磁盘块组的详细信息
dumpe2fs -h /dev/sda3

手动开启分区的acl权限（临时生效）
mount -o remount acl /
也可以通过修改/etc/fstab文件，永久开启acl
加入acl
UUID=a4f0a3f7-caf5-40d1-a4a1-0a3fe163d417 /                       ext4    defaul,acl
重新挂载文件系统或重启系统使修改生效
mount -o remount
ACL基本命令
查询文件的acl权限
getfacl 文件名
设置文件的acl权限
setfacl 选项 文件名
-m：设置acl权限
-b：删除acl权限
setfacl -m u:用户名：权限 文件名（路径）
—R：递归设置权限


sudo（switch user do）命令进行权限设置
让管理员（root）事先定义某些特殊命令谁可以执行
默认sudo中是没有除了root之外用户的规则，要想使用先要配置sudo
sudo配置文件位置
/etc/sudoers
配置sudo文件使用命令 visudo
root    ALL=(ALL)       ALL
hsx124	ALL=(ALL)		/usr/bin/useradd,...!/usr/bin/passwd root(表示不能更改root用户密码)
root 表示用户 如果是用户组可写%组名
ALL 表示允许登录的主机
（ALL） 表示以谁的身份去执行 ALL表示root身份
ALL 表示当前用户可以执行的命令，多个命令可以使用逗号分隔(命令完整路径)
查看命令完整路径
which 命令
设置完后执行命令
sudo 命令
列出除root用户外可以执行的root权限命令
sudo -l

文件特殊权限setUID,setGID,sticky BIT
setUID
只有可以执行二进制程序才能设定SUID权限
命令执行者要求该程序拥有x权限
命令执行者在执行程序时获得该程序文件属主身份
setUID权限只在该程序执行过程中有效。



Linux网络基础
ping 主机地址（ip地址，主机名，域名）
作用：检测当前主机与目标主机之间的连通性（不是100%准确，有的服务器是禁ping）

netstat -tnlp
作用：查看网络的连接信息
-t 表示只列出tcp协议的连接
-n 表示将地址从字母组合转化成ip地址，将协议转化成端口号来显示
-l 表示过滤出state（状态）列中值为listenner的连结
-p 进程ID和进程名称
netstat -an
-a 表示全部
-n 将字母转化为数字。

traceroute 主机名
查找当前主机与目标主机之间所有的网关（路由器，会给沿途各个路由器发送icmp数据包，路由器可选择响应或者不给）

arp
作用：根据ip地址获取物理地址的协议
arp -a
查看本地缓冲的arp表
arp -d 主机地址
删除指定的缓存记录

tcpdump
作用：抓取数据包
tcpdump 协议 port 端口
tcpdump 协议 port 端口 host 地址
tcpdump -i 网上设备名

shell補足
变量的定义与使用
定义形式：class_name="yunwei"
使用形式：echo $class_name
sh shell文件
检查是否有语法错误后执行
单引号：不能识别变量原样输出，不能转义
双引号：能识别变量能解析，可以转义
反引号：用来引用系统命令，先执行它
${}:用来引用系统命令，先执行它
():执行一段命令在子shell中
{}:执行一段命令在当前shell中
[]:用于变量的测试

set
作用：查看变量
-u：调用未声明变量会报错
-x：在命令执行前，会把命令先输出一次


当在脚本中需要执行一些命令并且将执行的结果赋给变量时需要使用反引号
now=`date "+%F %T"`
echo $now

只读变量
readonly 变量名

接收用户输入
read -p 提示信息 变量名

删除变量
unset 变量名

表达式与运算符之间要有空格 
例如 2+2 是不对的，必须写成 2 + 2。
条件表达式要放在括号之间，并且要有空格，例如：[$a==$b]是不对的,必须写成[ $a==$b ]
逻辑运算符
！非
-0 或
-a 与

字符串运算符
-z 检测字符串长度是否为0 [ -z $a ]
-n 检测字符串长度是否不为0 [ -n $a ]
str 检测字符串是否为空 [ $a ]

文件测试运算符
-b file 检测文件是否是块设备文件 如果是true否则false [ -b $file ]
-c file 检测文件是否是字符设备文件 如果是true否则false [ -c $file ]
-d file 检测文件是否是目录 如果是true否则false [ -d $file ]
-f file 检测文件是否是普通文件 如果是true否则false [ -f $file ]
-r file 检测文件是否可读 如果是true否则false [ -r $file ]
-w file 检测文件是否可写 如果是true否则false [ -w $file ]
-x file 检测文件是否可执行 如果是true否则false [ -x $file ]
-s file 检测文件是否是空文件 如果是true否则false [ -s $file ]
-e file 检测文件包括目录是否存在 如果是true否则false [ -e $file ]

############################################## awk start #########################################################

awk 选项 ‘命令部分’ 文件
常用选项
-F 定义字段分割符号，默认以空格分割
-v 定义变量并赋值

printf格式化输出
printf '输出类型输出格式' 输出内容
%ns：输出字符串，n是数字指代输出几个字符
%ni：输出整数，n是数字指代输出几个数字
%m.nf:输出浮点数，m和n是数字，指代输出的整数位数和小数位数，
	  如%8.2f,代表输出8位数，其中两位是小数，6位是整数。

awk '条件1{动作1} 条件2{动作2} ...' 文件名
NR 行号 
NF 列号
OFS 输出字段分隔符

定义变量
awk -v num=3 -F: '{print num}' 文件

BEGIN:在awk程序一开始时，尚未读取任何数据之前执行。BEGIN后的动作只在程序开始时执行一次。
END：在awk程序处理完所有数据，即将结束时执行，END后的动作只在程序结束时执行一次。
df -h | tail -n +2| awk -F " " 'BEGIN{print "start"} {print $5} END{print "end.."}'
start
25%
1%
22%
100%
end..
注意在awk中使用“//”包含的字符串，awk才会去查找。字符串必须用//
正规：、//,//中也可以写入字符

$2~/bc/ :表示第二列是否包含

############################################## awk end #########################################################

################################# sed start ##############################################################
sed 选项 '（定位起点，定位结束）＋动作' 文件名
作用：用来将数据进行选取，替换，删除，新增
选项：
-n	一般sed命令会把所有数据都输出到屏幕，此选项则只会把经过sed命令处理的行输出到屏幕
-e	允许对输入数据应用多条sed命令编辑
-f 脚本文件名：从sed脚本中读入sed操作
-r 在sed中支持扩展正则
-i 用sed的修改结果直接修改读取数据的文件，而不是由屏幕输出
动作：
p : 打印
a \:追加，在当前行后添加一行或多行，添加多行时，除最后一行外，每行末尾需要用\代表数据未完结
★sed -n '2ihello world' 文件名
往文件第二行上面追加hello world
c \:行替换，用c后面的字符串替换原数据行，替换多行时，除最后一行外，每行末尾需要用\代表数据未完结
★sed '$chello world' 文件名
把最后一行替换成hello world
★sed '/^root/hello world' 文件名
把以root开头的行替换成hello world
i \:在指定行之前插入
d ：删除指定行

对文件进行搜索替换
sed 选项 '定位s/搜索内容/替换内容/动作' 文件
/分隔符可以自定义一般用/
动作一般是p打印和g全局替换
sed 's/\//\\/gp' path.txt
sed '10s/\//\\/gp' path.txt

r：从另外文件中读取内容
w：内容另存为
&：保存查找串以便在替换串中引用
=:打印行号
！：对所选行以外的所有行应用命令，放到行数之后
q：退出

sed '定dsa位r 读取的文件绝对或相对路径' 文件 
sed '$r ./path.txt' 文件
最后一行读取path.txt文件内容
sed 'r 读取的文件绝对或相对路径' 

/key/	查询包含关键字的行	sed -n '/root/p' 文件 
/key1/,/key2/	匹配包含两个关键字之间的行	sed -n '/^admin/,/^mysql/p' file
/key/,x	从匹配关键字的行开始到文件第x行之间的行（包含关键字所在行）	sed -n '/^ftp/,7p'
x,/key/	从第x行开始到与关键字的匹配行之间的行
x,y!	不包含x到y行
/key/!	不包含关键字行		sed -n '/bash$/!p' file

脚本格式
sed -f scripts.sed file # 使用脚本处理文件
建议使用	./sed.sh file

脚本的第一行写上
#!/bin/sed -f
1,5d
s/root/hello/g
3ihello
5iworld
ajjjjj
p

注意事项
1，脚本文件是一个sed命令清单
2，在每行的末尾不能有任何空格，制表符或其他文本
3，如果在一行中有多个命令，应该用分号分隔
4，不要用引号包命令
5，#开头为注释

################################# sed end ##############################################################

sort 选项 文件名
-f:忽略大小写
-b：忽略每行前面的空白部分
-n：以数值型进行排序，默认使用字符串型排序
-r：反向排序
-u：去重
-t：指定分隔符

uniq 选项 文件名
作用:去重、
-i:忽略大小写
sed -r 's/0*([0-9])/\1/')











day9 5

















